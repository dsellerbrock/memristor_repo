--altpriority_encoder CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" LSB_PRIORITY="NO" PIPELINE=1 WIDTH=16 WIDTHAD=4 aclr clk_en clock data q zero
--VERSION_BEGIN 18.1 cbx_altpriority_encoder 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION altpriority_encoder_3ra (data[7..0])
RETURNS ( q[2..0], zero);

--synthesis_resources = reg 5 
SUBDESIGN altpriority_encoder_egc
( 
	aclr	:	input;
	clk_en	:	input;
	clock	:	input;
	data[15..0]	:	input;
	q[3..0]	:	output;
	zero	:	output;
) 
VARIABLE 
	altpriority_encoder22 : altpriority_encoder_3ra;
	altpriority_encoder23 : altpriority_encoder_3ra;
	pipeline_q_dffe[3..0] : dffe;
	pipeline_zero_n_dffe : dffe;
	tmp_q_wire[3..0]	: WIRE;
	tmp_zero_wire	: WIRE;

BEGIN 
	altpriority_encoder22.data[7..0] = data[7..0];
	altpriority_encoder23.data[7..0] = data[15..8];
	pipeline_q_dffe[].clk = clock;
	pipeline_q_dffe[].clrn = (! aclr);
	pipeline_q_dffe[].d = tmp_q_wire[];
	pipeline_q_dffe[].ena = clk_en;
	pipeline_zero_n_dffe.clk = clock;
	pipeline_zero_n_dffe.clrn = (! aclr);
	pipeline_zero_n_dffe.d = (! tmp_zero_wire);
	pipeline_zero_n_dffe.ena = clk_en;
	q[] = pipeline_q_dffe[].q;
	tmp_q_wire[] = ( (! altpriority_encoder23.zero), ((altpriority_encoder23.zero & altpriority_encoder22.q[]) # ((! altpriority_encoder23.zero) & altpriority_encoder23.q[])));
	tmp_zero_wire = (altpriority_encoder22.zero & altpriority_encoder23.zero);
	zero = (! pipeline_zero_n_dffe.q);
END;
--VALID FILE
