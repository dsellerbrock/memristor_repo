component memristor_well_posed< foundation.electrical.branch
% Memristor
% Models an ideal memristor with a nonlinear dopant drift approach.
%
% The memristance is given by M=x*Ra+(1-x)*Rb, where x is the fraction 
% of the memristor that is in state A, and Ra and Rb are the 
% resistances when the entire memristor is in state A or B, 
% respectively. The memristor state is determined by dx/dt=i*F(x)/Q0, 
% where i is the current from the positive to the negative terminal, Q0 
% is the total charge required for a full transition between states A 
% and B, and F(x) is a window function designed to keep x between 0 and 
% 1.

% Copyright 2015-2017 The MathWorks, Inc.

parameters
    R = {1e3, 'Ohm'};        % Resistance
    tau = {1e-5, '1'};       % Total charge required for full state transition
    k = {1,'1'};
    x0 = {0, '1'};          % State A fraction at t=0
end

variables(Access=private)
    xi = {value = x0, priority = priority.high}; % Memristor fraction in state A
    power_dissipated = {0, 'W'};                 % Power dissipated
end

equations
    assert(R>0)
    assert(tau>0)
    assert(k>0)
    assert(x0>=0)
    assert(x0<=1)
    let
        M = (1/R)*(tanh(xi)+1); 
        func2 = (1/tau)*(value(v,'V')-xi^3+xi);
    in
        i == v*M;
        xi.der == {func2,'1/s'};
    end
    power_dissipated == i*v;
end

end